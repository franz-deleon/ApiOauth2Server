<?php

namespace ApiOauth2Server\Model\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * OAuthUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OAuthUserRepository extends EntityRepository
{
    public function getUserByUsernameAndPasswordAndClientId($username, $password, $clientId)
    {
        $queryBuilder = $this->createQueryBuilder('u')
            ->innerJoin('u.clients', 'c')
            ->where('u.userName = :username')
            ->andWhere('u.password = :password')
            ->andWhere('c.clientId = :client')
            ->setParameters(array(
                'username' => $username,
                'password' => sha1($password),
                'client'   => $clientId,
            ));

        $cacheId = md5($username . $password);
        return $queryBuilder->getQuery()->useResultCache(true, 3600, $cacheId);
    }

    public function getUserWithScopeAndClientByUsernameAndClientId($username, $clientId)
    {
        $qb = $this->createQueryBuilder('u')
            ->select(array('u.userId', 's.scope'))
            ->leftJoin('u.scopes', 's')
            ->where('u.userName = :username')
            ->andWhere('s.clientId = :clientId')
            ->setParameters(array(
                'username' => $username,
                'clientId' => $clientId,
            ));

        $cacheId = md5($clientId . $username);
        return $qb->getQuery()->useResultCache(true, 3600, $cacheId);
    }
}
